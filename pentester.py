#!/usr/bin/python3
from bs4 import BeautifulSoup
import requests
import os
import sys
from django.utils.encoding import smart_str
from prettytable import PrettyTable
# Global Variables
pentesterAcademyURL ='https://www.pentesteracademy.com'
pentestFolder = '/home/tipsytux/Warehouse/Downloads/Tutorials/PentesterAcademy1'
pentesterDatabasePath= '/home/tipsytux/courses.list'
R = "\033[0;31;40m" #RED
G = "\033[0;32;40m" # GREEN
Y = "\033[0;33;40m" # Yellow
B = "\033[0;34;40m" # Blue
P = "\033[0;35;40m" #Purple
N = "\033[0m" # Reset
def printMenu():
    print ("Choose one of the following options :")
    print ("1. Get report dashboard")
    print ("2. Get detailed result of a course")
    print ("3. Get detailed report of all courses")
    print ("4. Update Database")
    print ("5. Exit")
    try:
        retval = int(input(P+"Choice "+N+": "))
    except KeyboardInterrupt:
        print ("Exiting ...........")
        sys.exit()
    except:
        return printMenu()
    return retval
def readFromDatabase():
    dataFile = open(pentesterDatabasePath)
    courseList = {}
    for lines in dataFile:
        line = lines.split('%')
        courseName = line[0]
        videoName = line[1].strip()
        videoList = courseList.get(courseName,[])
        videoList.append(videoName)
        courseList[courseName]=videoList
    return courseList

def updateDatabase():
    resp=requests.get(pentesterAcademyURL+'/topics')
    txt = resp.text
    soup = BeautifulSoup(txt,'lxml')
    topicsSoup=soup.find_all("h3",{"class":"media-heading"})
    topicList = []
    dataFile = open(pentesterDatabasePath,'w')
    for topic in topicsSoup:
        name = str(topic.text)
        id = topic.find('a')['href']
        videoUrl=pentesterAcademyURL+id
        videoResp=requests.get(videoUrl)
        videoTxt = videoResp.text
        videoSoup=BeautifulSoup(videoTxt,'lxml')
        videos = videoSoup.find_all("h4",{"class":"media-heading"})
        videosList=[]
        for video in videos:
            dataFile.write( smart_str(name.replace('/','-')) + "%" + smart_str(video.text) )
            dataFile.write("\n")
    dataFile.close()
    print ("check the database baby !")
def setup(courseList):
    try:
        os.chdir(pentestFolder)
    except:
        os.mkdir(pentestFolder)
        os.chdir(pentestFolder)
    for course,values in courseList.items():
        if not os.path.exists(course):
            print ("Creating directory - {} ....".format(course.replace('/','-')))
            os.mkdir(course.replace('/','-'))
    print("Initial setup check completed")
    return True

def getDetailedReport(courseList,courseId):
    detailedReport = getReports(courseList, False)
    values_list = list(detailedReport)
    x = PrettyTable()
    x.field_names=[R+"Video Title"+N]
    videos = detailedReport[values_list[courseId-1]]
    for video in videos:
        x.add_row([P+video+N])
    print(x.get_string(title=Y+values_list[courseId - 1]+N))

def getReports(courseList,printVal):
    x=PrettyTable()
    totalOnlineVideos = 0
    totalVideosOffline = 0
    totalDownloadsRemaining = 0
    detailedReport = {}
    x.field_names = [B+"Course Id","Course Name" , "Videos Online", "Videos Offline" , "Downloads Remaining"+N]
    os.chdir(pentestFolder)
    i = 0
    # Looping through all the courses
    for name,videoList in courseList.items():
        toBeDownloaded = detailedReport.get(name,[])
        i+=1
        filesList = os.listdir(name)
        if filesList:
            completionStatus = {}
            for video in videoList:
                status = completionStatus.get(video,0)
                tempVideo=video
                tempVideo = tempVideo.lower()
                tempVideo = tempVideo.replace(' ','')
                tempVideo = tempVideo.replace(':','')
                tempVideo = tempVideo.replace('-','')
                tempVideo = tempVideo.replace(',','')
                tempVideo = tempVideo.replace('?','')
                tempVideo = tempVideo.replace('/','')
                for file in filesList:
                    tempFile = file
                    tempFile = tempFile.lower()
                    tempFile = tempFile.replace(' ','')
                    tempFile = tempFile.replace('_','')
                    tempFile = tempFile.replace('-','')
                    tempFile = tempFile.replace(':','')
                    tempFile = tempFile.replace(',','')
                    if tempVideo in tempFile:
                        completionStatus[video] = 1
                    else:
                        status = completionStatus.get(video,0)
                        if status == 1:
                            completionStatus[video]=1
                        else:
                            completionStatus[video]=0
            notFound = 0
            for video,status in completionStatus.items():
                if status == 0:
                    notFound += 1
                    toBeDownloaded.append(video)
            if notFound==0:
                x.add_row([G+str(i),name, str(len(videoList)),str(len(videoList) - notFound) , str(notFound)+N])
                totalOnlineVideos += len(videoList)
                totalVideosOffline+= len(videoList) - notFound
                totalDownloadsRemaining += notFound
            else:
                x.add_row([Y+str(i),name, str(len(videoList)),str(len(videoList) - notFound) , str(notFound)+N])
                totalOnlineVideos += len(videoList)
                totalVideosOffline+= len(videoList) - notFound
                totalDownloadsRemaining += notFound
        else:
            x.add_row([R+str(i),name,str(len(videoList)), 0 , str(len(videoList))+N])
            totalOnlineVideos += len(videoList)
            totalVideosOffline+= 0
            totalDownloadsRemaining += len(videoList)
            toBeDownloaded.append(videoList)
        detailedReport[name]= toBeDownloaded
    x.add_row(['-'*10,'-'*70,'-'*15,'-'*15,'-'*15])
    x.add_row([Y+"TOTAL ", str(i), str(totalOnlineVideos), str(totalVideosOffline), str(totalDownloadsRemaining)+N ])
    if printVal:
        print(x.get_string(title="Pentester Acedemy"))
    return detailedReport


def main():
    print ("Welcome to the program to print all pentesteracademy videos and courses list")
    print ("*" + "=*"*38)
    print (" "*58 + "written by Tipsytux")
    courseList = readFromDatabase()
    setup(courseList)
    userExit = 0
    while userExit !=1:
        choice = printMenu()
        if choice == 1:
            courseList = readFromDatabase()
            getReports(courseList,True)
        elif choice ==2:
            courseList = readFromDatabase()
            try:
                option = int(input("Enter a valid course id : "))
                getDetailedReport(courseList,option)
            except:
                print ("Invalid Course Option detected")
        elif choice ==3:
            courseList = readFromDatabase()
            getDetailedReport(courseList,0)
        elif choice ==4:
            updateDatabase()
            courseList = readFromDatabase()
        elif choice == 5:
            userExit=1
            sys.exit()
        else:
            choice = printMenu
    courseList = readFromDatabase
    getReports(courseList)
main()
